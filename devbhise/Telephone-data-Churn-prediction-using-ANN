{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9598780,"sourceType":"datasetVersion","datasetId":5855544}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-11T12:06:34.910219Z","iopub.execute_input":"2024-10-11T12:06:34.910581Z","iopub.status.idle":"2024-10-11T12:06:34.926625Z","shell.execute_reply.started":"2024-10-11T12:06:34.910545Z","shell.execute_reply":"2024-10-11T12:06:34.925670Z"},"trusted":true},"execution_count":179,"outputs":[{"name":"stdout","text":"/kaggle/input/telco-customer-churn/Telco_customer_churn.xlsx\n","output_type":"stream"}]},{"cell_type":"code","source":"df = pd.read_excel('/kaggle/input/telco-customer-churn/Telco_customer_churn.xlsx')","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:35.087066Z","iopub.execute_input":"2024-10-11T12:06:35.087426Z","iopub.status.idle":"2024-10-11T12:06:38.187571Z","shell.execute_reply.started":"2024-10-11T12:06:35.087391Z","shell.execute_reply":"2024-10-11T12:06:38.186727Z"},"trusted":true},"execution_count":180,"outputs":[]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.189608Z","iopub.execute_input":"2024-10-11T12:06:38.190371Z","iopub.status.idle":"2024-10-11T12:06:38.217072Z","shell.execute_reply.started":"2024-10-11T12:06:38.190315Z","shell.execute_reply":"2024-10-11T12:06:38.216074Z"},"trusted":true},"execution_count":181,"outputs":[{"execution_count":181,"output_type":"execute_result","data":{"text/plain":"      CustomerID  Count        Country       State          City  Zip Code  \\\n0     3668-QPYBK      1  United States  California   Los Angeles     90003   \n1     9237-HQITU      1  United States  California   Los Angeles     90005   \n2     9305-CDSKC      1  United States  California   Los Angeles     90006   \n3     7892-POOKP      1  United States  California   Los Angeles     90010   \n4     0280-XJGEX      1  United States  California   Los Angeles     90015   \n...          ...    ...            ...         ...           ...       ...   \n7038  2569-WGERO      1  United States  California       Landers     92285   \n7039  6840-RESVB      1  United States  California      Adelanto     92301   \n7040  2234-XADUH      1  United States  California         Amboy     92304   \n7041  4801-JZAZL      1  United States  California  Angelus Oaks     92305   \n7042  3186-AJIEK      1  United States  California  Apple Valley     92308   \n\n                    Lat Long   Latitude   Longitude  Gender  ...  \\\n0     33.964131, -118.272783  33.964131 -118.272783    Male  ...   \n1      34.059281, -118.30742  34.059281 -118.307420  Female  ...   \n2     34.048013, -118.293953  34.048013 -118.293953  Female  ...   \n3     34.062125, -118.315709  34.062125 -118.315709  Female  ...   \n4     34.039224, -118.266293  34.039224 -118.266293    Male  ...   \n...                      ...        ...         ...     ...  ...   \n7038  34.341737, -116.539416  34.341737 -116.539416  Female  ...   \n7039  34.667815, -117.536183  34.667815 -117.536183    Male  ...   \n7040  34.559882, -115.637164  34.559882 -115.637164  Female  ...   \n7041     34.1678, -116.86433  34.167800 -116.864330  Female  ...   \n7042  34.424926, -117.184503  34.424926 -117.184503    Male  ...   \n\n            Contract Paperless Billing             Payment Method  \\\n0     Month-to-month               Yes               Mailed check   \n1     Month-to-month               Yes           Electronic check   \n2     Month-to-month               Yes           Electronic check   \n3     Month-to-month               Yes           Electronic check   \n4     Month-to-month               Yes  Bank transfer (automatic)   \n...              ...               ...                        ...   \n7038        Two year               Yes  Bank transfer (automatic)   \n7039        One year               Yes               Mailed check   \n7040        One year               Yes    Credit card (automatic)   \n7041  Month-to-month               Yes           Electronic check   \n7042        Two year               Yes  Bank transfer (automatic)   \n\n      Monthly Charges Total Charges Churn Label Churn Value Churn Score  CLTV  \\\n0               53.85        108.15         Yes           1          86  3239   \n1               70.70        151.65         Yes           1          67  2701   \n2               99.65         820.5         Yes           1          86  5372   \n3              104.80       3046.05         Yes           1          84  5003   \n4              103.70        5036.3         Yes           1          89  5340   \n...               ...           ...         ...         ...         ...   ...   \n7038            21.15        1419.4          No           0          45  5306   \n7039            84.80        1990.5          No           0          59  2140   \n7040           103.20        7362.9          No           0          71  5560   \n7041            29.60        346.45          No           0          59  2793   \n7042           105.65        6844.5          No           0          38  5097   \n\n                       Churn Reason  \n0      Competitor made better offer  \n1                             Moved  \n2                             Moved  \n3                             Moved  \n4     Competitor had better devices  \n...                             ...  \n7038                            NaN  \n7039                            NaN  \n7040                            NaN  \n7041                            NaN  \n7042                            NaN  \n\n[7043 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CustomerID</th>\n      <th>Count</th>\n      <th>Country</th>\n      <th>State</th>\n      <th>City</th>\n      <th>Zip Code</th>\n      <th>Lat Long</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Gender</th>\n      <th>...</th>\n      <th>Contract</th>\n      <th>Paperless Billing</th>\n      <th>Payment Method</th>\n      <th>Monthly Charges</th>\n      <th>Total Charges</th>\n      <th>Churn Label</th>\n      <th>Churn Value</th>\n      <th>Churn Score</th>\n      <th>CLTV</th>\n      <th>Churn Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3668-QPYBK</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90003</td>\n      <td>33.964131, -118.272783</td>\n      <td>33.964131</td>\n      <td>-118.272783</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>53.85</td>\n      <td>108.15</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>3239</td>\n      <td>Competitor made better offer</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9237-HQITU</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90005</td>\n      <td>34.059281, -118.30742</td>\n      <td>34.059281</td>\n      <td>-118.307420</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>70.70</td>\n      <td>151.65</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>67</td>\n      <td>2701</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9305-CDSKC</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90006</td>\n      <td>34.048013, -118.293953</td>\n      <td>34.048013</td>\n      <td>-118.293953</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>99.65</td>\n      <td>820.5</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>5372</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7892-POOKP</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90010</td>\n      <td>34.062125, -118.315709</td>\n      <td>34.062125</td>\n      <td>-118.315709</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>104.80</td>\n      <td>3046.05</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>84</td>\n      <td>5003</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0280-XJGEX</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90015</td>\n      <td>34.039224, -118.266293</td>\n      <td>34.039224</td>\n      <td>-118.266293</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>103.70</td>\n      <td>5036.3</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>89</td>\n      <td>5340</td>\n      <td>Competitor had better devices</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7038</th>\n      <td>2569-WGERO</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Landers</td>\n      <td>92285</td>\n      <td>34.341737, -116.539416</td>\n      <td>34.341737</td>\n      <td>-116.539416</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Two year</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>21.15</td>\n      <td>1419.4</td>\n      <td>No</td>\n      <td>0</td>\n      <td>45</td>\n      <td>5306</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7039</th>\n      <td>6840-RESVB</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Adelanto</td>\n      <td>92301</td>\n      <td>34.667815, -117.536183</td>\n      <td>34.667815</td>\n      <td>-117.536183</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>One year</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>84.80</td>\n      <td>1990.5</td>\n      <td>No</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2140</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7040</th>\n      <td>2234-XADUH</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Amboy</td>\n      <td>92304</td>\n      <td>34.559882, -115.637164</td>\n      <td>34.559882</td>\n      <td>-115.637164</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>One year</td>\n      <td>Yes</td>\n      <td>Credit card (automatic)</td>\n      <td>103.20</td>\n      <td>7362.9</td>\n      <td>No</td>\n      <td>0</td>\n      <td>71</td>\n      <td>5560</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7041</th>\n      <td>4801-JZAZL</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Angelus Oaks</td>\n      <td>92305</td>\n      <td>34.1678, -116.86433</td>\n      <td>34.167800</td>\n      <td>-116.864330</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>29.60</td>\n      <td>346.45</td>\n      <td>No</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2793</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7042</th>\n      <td>3186-AJIEK</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Apple Valley</td>\n      <td>92308</td>\n      <td>34.424926, -117.184503</td>\n      <td>34.424926</td>\n      <td>-117.184503</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>Two year</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>105.65</td>\n      <td>6844.5</td>\n      <td>No</td>\n      <td>0</td>\n      <td>38</td>\n      <td>5097</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>7043 rows × 33 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"import tensorflow \nfrom tensorflow.keras import models,layers\n\n","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.218112Z","iopub.execute_input":"2024-10-11T12:06:38.218390Z","iopub.status.idle":"2024-10-11T12:06:38.222751Z","shell.execute_reply.started":"2024-10-11T12:06:38.218358Z","shell.execute_reply":"2024-10-11T12:06:38.221810Z"},"trusted":true},"execution_count":182,"outputs":[]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.225001Z","iopub.execute_input":"2024-10-11T12:06:38.225369Z","iopub.status.idle":"2024-10-11T12:06:38.255824Z","shell.execute_reply.started":"2024-10-11T12:06:38.225337Z","shell.execute_reply":"2024-10-11T12:06:38.254962Z"},"trusted":true},"execution_count":183,"outputs":[{"execution_count":183,"output_type":"execute_result","data":{"text/plain":"      CustomerID  Count        Country       State          City  Zip Code  \\\n0     3668-QPYBK      1  United States  California   Los Angeles     90003   \n1     9237-HQITU      1  United States  California   Los Angeles     90005   \n2     9305-CDSKC      1  United States  California   Los Angeles     90006   \n3     7892-POOKP      1  United States  California   Los Angeles     90010   \n4     0280-XJGEX      1  United States  California   Los Angeles     90015   \n...          ...    ...            ...         ...           ...       ...   \n7038  2569-WGERO      1  United States  California       Landers     92285   \n7039  6840-RESVB      1  United States  California      Adelanto     92301   \n7040  2234-XADUH      1  United States  California         Amboy     92304   \n7041  4801-JZAZL      1  United States  California  Angelus Oaks     92305   \n7042  3186-AJIEK      1  United States  California  Apple Valley     92308   \n\n                    Lat Long   Latitude   Longitude  Gender  ...  \\\n0     33.964131, -118.272783  33.964131 -118.272783    Male  ...   \n1      34.059281, -118.30742  34.059281 -118.307420  Female  ...   \n2     34.048013, -118.293953  34.048013 -118.293953  Female  ...   \n3     34.062125, -118.315709  34.062125 -118.315709  Female  ...   \n4     34.039224, -118.266293  34.039224 -118.266293    Male  ...   \n...                      ...        ...         ...     ...  ...   \n7038  34.341737, -116.539416  34.341737 -116.539416  Female  ...   \n7039  34.667815, -117.536183  34.667815 -117.536183    Male  ...   \n7040  34.559882, -115.637164  34.559882 -115.637164  Female  ...   \n7041     34.1678, -116.86433  34.167800 -116.864330  Female  ...   \n7042  34.424926, -117.184503  34.424926 -117.184503    Male  ...   \n\n            Contract Paperless Billing             Payment Method  \\\n0     Month-to-month               Yes               Mailed check   \n1     Month-to-month               Yes           Electronic check   \n2     Month-to-month               Yes           Electronic check   \n3     Month-to-month               Yes           Electronic check   \n4     Month-to-month               Yes  Bank transfer (automatic)   \n...              ...               ...                        ...   \n7038        Two year               Yes  Bank transfer (automatic)   \n7039        One year               Yes               Mailed check   \n7040        One year               Yes    Credit card (automatic)   \n7041  Month-to-month               Yes           Electronic check   \n7042        Two year               Yes  Bank transfer (automatic)   \n\n      Monthly Charges Total Charges Churn Label Churn Value Churn Score  CLTV  \\\n0               53.85        108.15         Yes           1          86  3239   \n1               70.70        151.65         Yes           1          67  2701   \n2               99.65         820.5         Yes           1          86  5372   \n3              104.80       3046.05         Yes           1          84  5003   \n4              103.70        5036.3         Yes           1          89  5340   \n...               ...           ...         ...         ...         ...   ...   \n7038            21.15        1419.4          No           0          45  5306   \n7039            84.80        1990.5          No           0          59  2140   \n7040           103.20        7362.9          No           0          71  5560   \n7041            29.60        346.45          No           0          59  2793   \n7042           105.65        6844.5          No           0          38  5097   \n\n                       Churn Reason  \n0      Competitor made better offer  \n1                             Moved  \n2                             Moved  \n3                             Moved  \n4     Competitor had better devices  \n...                             ...  \n7038                            NaN  \n7039                            NaN  \n7040                            NaN  \n7041                            NaN  \n7042                            NaN  \n\n[7043 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CustomerID</th>\n      <th>Count</th>\n      <th>Country</th>\n      <th>State</th>\n      <th>City</th>\n      <th>Zip Code</th>\n      <th>Lat Long</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Gender</th>\n      <th>...</th>\n      <th>Contract</th>\n      <th>Paperless Billing</th>\n      <th>Payment Method</th>\n      <th>Monthly Charges</th>\n      <th>Total Charges</th>\n      <th>Churn Label</th>\n      <th>Churn Value</th>\n      <th>Churn Score</th>\n      <th>CLTV</th>\n      <th>Churn Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3668-QPYBK</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90003</td>\n      <td>33.964131, -118.272783</td>\n      <td>33.964131</td>\n      <td>-118.272783</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>53.85</td>\n      <td>108.15</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>3239</td>\n      <td>Competitor made better offer</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9237-HQITU</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90005</td>\n      <td>34.059281, -118.30742</td>\n      <td>34.059281</td>\n      <td>-118.307420</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>70.70</td>\n      <td>151.65</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>67</td>\n      <td>2701</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9305-CDSKC</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90006</td>\n      <td>34.048013, -118.293953</td>\n      <td>34.048013</td>\n      <td>-118.293953</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>99.65</td>\n      <td>820.5</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>5372</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7892-POOKP</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90010</td>\n      <td>34.062125, -118.315709</td>\n      <td>34.062125</td>\n      <td>-118.315709</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>104.80</td>\n      <td>3046.05</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>84</td>\n      <td>5003</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0280-XJGEX</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90015</td>\n      <td>34.039224, -118.266293</td>\n      <td>34.039224</td>\n      <td>-118.266293</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>103.70</td>\n      <td>5036.3</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>89</td>\n      <td>5340</td>\n      <td>Competitor had better devices</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7038</th>\n      <td>2569-WGERO</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Landers</td>\n      <td>92285</td>\n      <td>34.341737, -116.539416</td>\n      <td>34.341737</td>\n      <td>-116.539416</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Two year</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>21.15</td>\n      <td>1419.4</td>\n      <td>No</td>\n      <td>0</td>\n      <td>45</td>\n      <td>5306</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7039</th>\n      <td>6840-RESVB</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Adelanto</td>\n      <td>92301</td>\n      <td>34.667815, -117.536183</td>\n      <td>34.667815</td>\n      <td>-117.536183</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>One year</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>84.80</td>\n      <td>1990.5</td>\n      <td>No</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2140</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7040</th>\n      <td>2234-XADUH</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Amboy</td>\n      <td>92304</td>\n      <td>34.559882, -115.637164</td>\n      <td>34.559882</td>\n      <td>-115.637164</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>One year</td>\n      <td>Yes</td>\n      <td>Credit card (automatic)</td>\n      <td>103.20</td>\n      <td>7362.9</td>\n      <td>No</td>\n      <td>0</td>\n      <td>71</td>\n      <td>5560</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7041</th>\n      <td>4801-JZAZL</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Angelus Oaks</td>\n      <td>92305</td>\n      <td>34.1678, -116.86433</td>\n      <td>34.167800</td>\n      <td>-116.864330</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>29.60</td>\n      <td>346.45</td>\n      <td>No</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2793</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7042</th>\n      <td>3186-AJIEK</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Apple Valley</td>\n      <td>92308</td>\n      <td>34.424926, -117.184503</td>\n      <td>34.424926</td>\n      <td>-117.184503</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>Two year</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>105.65</td>\n      <td>6844.5</td>\n      <td>No</td>\n      <td>0</td>\n      <td>38</td>\n      <td>5097</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>7043 rows × 33 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.256952Z","iopub.execute_input":"2024-10-11T12:06:38.257269Z","iopub.status.idle":"2024-10-11T12:06:38.276172Z","shell.execute_reply.started":"2024-10-11T12:06:38.257236Z","shell.execute_reply":"2024-10-11T12:06:38.275322Z"},"trusted":true},"execution_count":184,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7043 entries, 0 to 7042\nData columns (total 33 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   CustomerID         7043 non-null   object \n 1   Count              7043 non-null   int64  \n 2   Country            7043 non-null   object \n 3   State              7043 non-null   object \n 4   City               7043 non-null   object \n 5   Zip Code           7043 non-null   int64  \n 6   Lat Long           7043 non-null   object \n 7   Latitude           7043 non-null   float64\n 8   Longitude          7043 non-null   float64\n 9   Gender             7043 non-null   object \n 10  Senior Citizen     7043 non-null   object \n 11  Partner            7043 non-null   object \n 12  Dependents         7043 non-null   object \n 13  Tenure Months      7043 non-null   int64  \n 14  Phone Service      7043 non-null   object \n 15  Multiple Lines     7043 non-null   object \n 16  Internet Service   7043 non-null   object \n 17  Online Security    7043 non-null   object \n 18  Online Backup      7043 non-null   object \n 19  Device Protection  7043 non-null   object \n 20  Tech Support       7043 non-null   object \n 21  Streaming TV       7043 non-null   object \n 22  Streaming Movies   7043 non-null   object \n 23  Contract           7043 non-null   object \n 24  Paperless Billing  7043 non-null   object \n 25  Payment Method     7043 non-null   object \n 26  Monthly Charges    7043 non-null   float64\n 27  Total Charges      7043 non-null   object \n 28  Churn Label        7043 non-null   object \n 29  Churn Value        7043 non-null   int64  \n 30  Churn Score        7043 non-null   int64  \n 31  CLTV               7043 non-null   int64  \n 32  Churn Reason       1869 non-null   object \ndtypes: float64(3), int64(6), object(24)\nmemory usage: 1.8+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.277126Z","iopub.execute_input":"2024-10-11T12:06:38.277386Z","iopub.status.idle":"2024-10-11T12:06:38.282713Z","shell.execute_reply.started":"2024-10-11T12:06:38.277357Z","shell.execute_reply":"2024-10-11T12:06:38.281795Z"},"trusted":true},"execution_count":185,"outputs":[{"execution_count":185,"output_type":"execute_result","data":{"text/plain":"(7043, 33)"},"metadata":{}}]},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.283858Z","iopub.execute_input":"2024-10-11T12:06:38.284139Z","iopub.status.idle":"2024-10-11T12:06:38.293115Z","shell.execute_reply.started":"2024-10-11T12:06:38.284108Z","shell.execute_reply":"2024-10-11T12:06:38.292296Z"},"trusted":true},"execution_count":186,"outputs":[{"execution_count":186,"output_type":"execute_result","data":{"text/plain":"Index(['CustomerID', 'Count', 'Country', 'State', 'City', 'Zip Code',\n       'Lat Long', 'Latitude', 'Longitude', 'Gender', 'Senior Citizen',\n       'Partner', 'Dependents', 'Tenure Months', 'Phone Service',\n       'Multiple Lines', 'Internet Service', 'Online Security',\n       'Online Backup', 'Device Protection', 'Tech Support', 'Streaming TV',\n       'Streaming Movies', 'Contract', 'Paperless Billing', 'Payment Method',\n       'Monthly Charges', 'Total Charges', 'Churn Label', 'Churn Value',\n       'Churn Score', 'CLTV', 'Churn Reason'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.294497Z","iopub.execute_input":"2024-10-11T12:06:38.294766Z","iopub.status.idle":"2024-10-11T12:06:38.316165Z","shell.execute_reply.started":"2024-10-11T12:06:38.294737Z","shell.execute_reply":"2024-10-11T12:06:38.315064Z"},"trusted":true},"execution_count":187,"outputs":[{"execution_count":187,"output_type":"execute_result","data":{"text/plain":"   CustomerID  Count        Country       State         City  Zip Code  \\\n0  3668-QPYBK      1  United States  California  Los Angeles     90003   \n1  9237-HQITU      1  United States  California  Los Angeles     90005   \n2  9305-CDSKC      1  United States  California  Los Angeles     90006   \n3  7892-POOKP      1  United States  California  Los Angeles     90010   \n4  0280-XJGEX      1  United States  California  Los Angeles     90015   \n\n                 Lat Long   Latitude   Longitude  Gender  ...        Contract  \\\n0  33.964131, -118.272783  33.964131 -118.272783    Male  ...  Month-to-month   \n1   34.059281, -118.30742  34.059281 -118.307420  Female  ...  Month-to-month   \n2  34.048013, -118.293953  34.048013 -118.293953  Female  ...  Month-to-month   \n3  34.062125, -118.315709  34.062125 -118.315709  Female  ...  Month-to-month   \n4  34.039224, -118.266293  34.039224 -118.266293    Male  ...  Month-to-month   \n\n  Paperless Billing             Payment Method  Monthly Charges Total Charges  \\\n0               Yes               Mailed check            53.85        108.15   \n1               Yes           Electronic check            70.70        151.65   \n2               Yes           Electronic check            99.65         820.5   \n3               Yes           Electronic check           104.80       3046.05   \n4               Yes  Bank transfer (automatic)           103.70        5036.3   \n\n  Churn Label Churn Value Churn Score  CLTV                   Churn Reason  \n0         Yes           1          86  3239   Competitor made better offer  \n1         Yes           1          67  2701                          Moved  \n2         Yes           1          86  5372                          Moved  \n3         Yes           1          84  5003                          Moved  \n4         Yes           1          89  5340  Competitor had better devices  \n\n[5 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CustomerID</th>\n      <th>Count</th>\n      <th>Country</th>\n      <th>State</th>\n      <th>City</th>\n      <th>Zip Code</th>\n      <th>Lat Long</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Gender</th>\n      <th>...</th>\n      <th>Contract</th>\n      <th>Paperless Billing</th>\n      <th>Payment Method</th>\n      <th>Monthly Charges</th>\n      <th>Total Charges</th>\n      <th>Churn Label</th>\n      <th>Churn Value</th>\n      <th>Churn Score</th>\n      <th>CLTV</th>\n      <th>Churn Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3668-QPYBK</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90003</td>\n      <td>33.964131, -118.272783</td>\n      <td>33.964131</td>\n      <td>-118.272783</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>53.85</td>\n      <td>108.15</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>3239</td>\n      <td>Competitor made better offer</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9237-HQITU</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90005</td>\n      <td>34.059281, -118.30742</td>\n      <td>34.059281</td>\n      <td>-118.307420</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>70.70</td>\n      <td>151.65</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>67</td>\n      <td>2701</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9305-CDSKC</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90006</td>\n      <td>34.048013, -118.293953</td>\n      <td>34.048013</td>\n      <td>-118.293953</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>99.65</td>\n      <td>820.5</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>5372</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7892-POOKP</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90010</td>\n      <td>34.062125, -118.315709</td>\n      <td>34.062125</td>\n      <td>-118.315709</td>\n      <td>Female</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>104.80</td>\n      <td>3046.05</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>84</td>\n      <td>5003</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0280-XJGEX</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n      <td>90015</td>\n      <td>34.039224, -118.266293</td>\n      <td>34.039224</td>\n      <td>-118.266293</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>103.70</td>\n      <td>5036.3</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>89</td>\n      <td>5340</td>\n      <td>Competitor had better devices</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 33 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.iloc[:,:5]","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.317155Z","iopub.execute_input":"2024-10-11T12:06:38.317471Z","iopub.status.idle":"2024-10-11T12:06:38.331909Z","shell.execute_reply.started":"2024-10-11T12:06:38.317434Z","shell.execute_reply":"2024-10-11T12:06:38.331058Z"},"trusted":true},"execution_count":188,"outputs":[{"execution_count":188,"output_type":"execute_result","data":{"text/plain":"      CustomerID  Count        Country       State          City\n0     3668-QPYBK      1  United States  California   Los Angeles\n1     9237-HQITU      1  United States  California   Los Angeles\n2     9305-CDSKC      1  United States  California   Los Angeles\n3     7892-POOKP      1  United States  California   Los Angeles\n4     0280-XJGEX      1  United States  California   Los Angeles\n...          ...    ...            ...         ...           ...\n7038  2569-WGERO      1  United States  California       Landers\n7039  6840-RESVB      1  United States  California      Adelanto\n7040  2234-XADUH      1  United States  California         Amboy\n7041  4801-JZAZL      1  United States  California  Angelus Oaks\n7042  3186-AJIEK      1  United States  California  Apple Valley\n\n[7043 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CustomerID</th>\n      <th>Count</th>\n      <th>Country</th>\n      <th>State</th>\n      <th>City</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3668-QPYBK</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9237-HQITU</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9305-CDSKC</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7892-POOKP</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0280-XJGEX</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Los Angeles</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7038</th>\n      <td>2569-WGERO</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Landers</td>\n    </tr>\n    <tr>\n      <th>7039</th>\n      <td>6840-RESVB</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Adelanto</td>\n    </tr>\n    <tr>\n      <th>7040</th>\n      <td>2234-XADUH</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Amboy</td>\n    </tr>\n    <tr>\n      <th>7041</th>\n      <td>4801-JZAZL</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Angelus Oaks</td>\n    </tr>\n    <tr>\n      <th>7042</th>\n      <td>3186-AJIEK</td>\n      <td>1</td>\n      <td>United States</td>\n      <td>California</td>\n      <td>Apple Valley</td>\n    </tr>\n  </tbody>\n</table>\n<p>7043 rows × 5 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.Count.unique()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.335908Z","iopub.execute_input":"2024-10-11T12:06:38.336298Z","iopub.status.idle":"2024-10-11T12:06:38.343206Z","shell.execute_reply.started":"2024-10-11T12:06:38.336267Z","shell.execute_reply":"2024-10-11T12:06:38.342063Z"},"trusted":true},"execution_count":189,"outputs":[{"execution_count":189,"output_type":"execute_result","data":{"text/plain":"array([1])"},"metadata":{}}]},{"cell_type":"code","source":"df.Country.unique()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.344334Z","iopub.execute_input":"2024-10-11T12:06:38.344587Z","iopub.status.idle":"2024-10-11T12:06:38.353074Z","shell.execute_reply.started":"2024-10-11T12:06:38.344558Z","shell.execute_reply":"2024-10-11T12:06:38.352165Z"},"trusted":true},"execution_count":190,"outputs":[{"execution_count":190,"output_type":"execute_result","data":{"text/plain":"array(['United States'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"df.State.unique()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.354361Z","iopub.execute_input":"2024-10-11T12:06:38.354823Z","iopub.status.idle":"2024-10-11T12:06:38.363634Z","shell.execute_reply.started":"2024-10-11T12:06:38.354771Z","shell.execute_reply":"2024-10-11T12:06:38.362720Z"},"trusted":true},"execution_count":191,"outputs":[{"execution_count":191,"output_type":"execute_result","data":{"text/plain":"array(['California'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"df.City.unique()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.364948Z","iopub.execute_input":"2024-10-11T12:06:38.365842Z","iopub.status.idle":"2024-10-11T12:06:38.374864Z","shell.execute_reply.started":"2024-10-11T12:06:38.365790Z","shell.execute_reply":"2024-10-11T12:06:38.373897Z"},"trusted":true},"execution_count":192,"outputs":[{"execution_count":192,"output_type":"execute_result","data":{"text/plain":"array(['Los Angeles', 'Beverly Hills', 'Huntington Park', ..., 'Standish',\n       'Tulelake', 'Olympic Valley'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.375881Z","iopub.execute_input":"2024-10-11T12:06:38.376271Z","iopub.status.idle":"2024-10-11T12:06:38.392355Z","shell.execute_reply.started":"2024-10-11T12:06:38.376231Z","shell.execute_reply":"2024-10-11T12:06:38.391507Z"},"trusted":true},"execution_count":193,"outputs":[{"execution_count":193,"output_type":"execute_result","data":{"text/plain":"CustomerID              0\nCount                   0\nCountry                 0\nState                   0\nCity                    0\nZip Code                0\nLat Long                0\nLatitude                0\nLongitude               0\nGender                  0\nSenior Citizen          0\nPartner                 0\nDependents              0\nTenure Months           0\nPhone Service           0\nMultiple Lines          0\nInternet Service        0\nOnline Security         0\nOnline Backup           0\nDevice Protection       0\nTech Support            0\nStreaming TV            0\nStreaming Movies        0\nContract                0\nPaperless Billing       0\nPayment Method          0\nMonthly Charges         0\nTotal Charges           0\nChurn Label             0\nChurn Value             0\nChurn Score             0\nCLTV                    0\nChurn Reason         5174\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df = df.drop(['CustomerID','Count','Country','State'],axis =1)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.394690Z","iopub.execute_input":"2024-10-11T12:06:38.395045Z","iopub.status.idle":"2024-10-11T12:06:38.401441Z","shell.execute_reply.started":"2024-10-11T12:06:38.394993Z","shell.execute_reply":"2024-10-11T12:06:38.400642Z"},"trusted":true},"execution_count":194,"outputs":[]},{"cell_type":"code","source":"df.iloc[:,15:]","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.575747Z","iopub.execute_input":"2024-10-11T12:06:38.576734Z","iopub.status.idle":"2024-10-11T12:06:38.594990Z","shell.execute_reply.started":"2024-10-11T12:06:38.576680Z","shell.execute_reply":"2024-10-11T12:06:38.594163Z"},"trusted":true},"execution_count":195,"outputs":[{"execution_count":195,"output_type":"execute_result","data":{"text/plain":"        Device Protection         Tech Support         Streaming TV  \\\n0                      No                   No                   No   \n1                      No                   No                   No   \n2                     Yes                   No                  Yes   \n3                     Yes                  Yes                  Yes   \n4                     Yes                   No                  Yes   \n...                   ...                  ...                  ...   \n7038  No internet service  No internet service  No internet service   \n7039                  Yes                  Yes                  Yes   \n7040                  Yes                   No                  Yes   \n7041                   No                   No                   No   \n7042                  Yes                  Yes                  Yes   \n\n         Streaming Movies        Contract Paperless Billing  \\\n0                      No  Month-to-month               Yes   \n1                      No  Month-to-month               Yes   \n2                     Yes  Month-to-month               Yes   \n3                     Yes  Month-to-month               Yes   \n4                     Yes  Month-to-month               Yes   \n...                   ...             ...               ...   \n7038  No internet service        Two year               Yes   \n7039                  Yes        One year               Yes   \n7040                  Yes        One year               Yes   \n7041                   No  Month-to-month               Yes   \n7042                  Yes        Two year               Yes   \n\n                 Payment Method  Monthly Charges Total Charges Churn Label  \\\n0                  Mailed check            53.85        108.15         Yes   \n1              Electronic check            70.70        151.65         Yes   \n2              Electronic check            99.65         820.5         Yes   \n3              Electronic check           104.80       3046.05         Yes   \n4     Bank transfer (automatic)           103.70        5036.3         Yes   \n...                         ...              ...           ...         ...   \n7038  Bank transfer (automatic)            21.15        1419.4          No   \n7039               Mailed check            84.80        1990.5          No   \n7040    Credit card (automatic)           103.20        7362.9          No   \n7041           Electronic check            29.60        346.45          No   \n7042  Bank transfer (automatic)           105.65        6844.5          No   \n\n      Churn Value  Churn Score  CLTV                   Churn Reason  \n0               1           86  3239   Competitor made better offer  \n1               1           67  2701                          Moved  \n2               1           86  5372                          Moved  \n3               1           84  5003                          Moved  \n4               1           89  5340  Competitor had better devices  \n...           ...          ...   ...                            ...  \n7038            0           45  5306                            NaN  \n7039            0           59  2140                            NaN  \n7040            0           71  5560                            NaN  \n7041            0           59  2793                            NaN  \n7042            0           38  5097                            NaN  \n\n[7043 rows x 14 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Device Protection</th>\n      <th>Tech Support</th>\n      <th>Streaming TV</th>\n      <th>Streaming Movies</th>\n      <th>Contract</th>\n      <th>Paperless Billing</th>\n      <th>Payment Method</th>\n      <th>Monthly Charges</th>\n      <th>Total Charges</th>\n      <th>Churn Label</th>\n      <th>Churn Value</th>\n      <th>Churn Score</th>\n      <th>CLTV</th>\n      <th>Churn Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>53.85</td>\n      <td>108.15</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>3239</td>\n      <td>Competitor made better offer</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>70.70</td>\n      <td>151.65</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>67</td>\n      <td>2701</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>99.65</td>\n      <td>820.5</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>5372</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>104.80</td>\n      <td>3046.05</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>84</td>\n      <td>5003</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>103.70</td>\n      <td>5036.3</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>89</td>\n      <td>5340</td>\n      <td>Competitor had better devices</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7038</th>\n      <td>No internet service</td>\n      <td>No internet service</td>\n      <td>No internet service</td>\n      <td>No internet service</td>\n      <td>Two year</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>21.15</td>\n      <td>1419.4</td>\n      <td>No</td>\n      <td>0</td>\n      <td>45</td>\n      <td>5306</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7039</th>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>One year</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>84.80</td>\n      <td>1990.5</td>\n      <td>No</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2140</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7040</th>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>One year</td>\n      <td>Yes</td>\n      <td>Credit card (automatic)</td>\n      <td>103.20</td>\n      <td>7362.9</td>\n      <td>No</td>\n      <td>0</td>\n      <td>71</td>\n      <td>5560</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7041</th>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>29.60</td>\n      <td>346.45</td>\n      <td>No</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2793</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7042</th>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Two year</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>105.65</td>\n      <td>6844.5</td>\n      <td>No</td>\n      <td>0</td>\n      <td>38</td>\n      <td>5097</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>7043 rows × 14 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.City.nunique()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.742330Z","iopub.execute_input":"2024-10-11T12:06:38.743173Z","iopub.status.idle":"2024-10-11T12:06:38.750076Z","shell.execute_reply.started":"2024-10-11T12:06:38.743133Z","shell.execute_reply":"2024-10-11T12:06:38.749138Z"},"trusted":true},"execution_count":196,"outputs":[{"execution_count":196,"output_type":"execute_result","data":{"text/plain":"1129"},"metadata":{}}]},{"cell_type":"code","source":"df['Zip Code'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:38.947809Z","iopub.execute_input":"2024-10-11T12:06:38.948430Z","iopub.status.idle":"2024-10-11T12:06:38.955040Z","shell.execute_reply.started":"2024-10-11T12:06:38.948390Z","shell.execute_reply":"2024-10-11T12:06:38.954118Z"},"trusted":true},"execution_count":197,"outputs":[{"execution_count":197,"output_type":"execute_result","data":{"text/plain":"1652"},"metadata":{}}]},{"cell_type":"code","source":"df.Longitude.nunique()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:39.235118Z","iopub.execute_input":"2024-10-11T12:06:39.235468Z","iopub.status.idle":"2024-10-11T12:06:39.242555Z","shell.execute_reply.started":"2024-10-11T12:06:39.235435Z","shell.execute_reply":"2024-10-11T12:06:39.241456Z"},"trusted":true},"execution_count":198,"outputs":[{"execution_count":198,"output_type":"execute_result","data":{"text/plain":"1651"},"metadata":{}}]},{"cell_type":"code","source":"df.Gender.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:39.560383Z","iopub.execute_input":"2024-10-11T12:06:39.560755Z","iopub.status.idle":"2024-10-11T12:06:39.569035Z","shell.execute_reply.started":"2024-10-11T12:06:39.560720Z","shell.execute_reply":"2024-10-11T12:06:39.568107Z"},"trusted":true},"execution_count":199,"outputs":[{"execution_count":199,"output_type":"execute_result","data":{"text/plain":"Gender\nMale      3555\nFemale    3488\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df.Contract.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:39.731262Z","iopub.execute_input":"2024-10-11T12:06:39.731623Z","iopub.status.idle":"2024-10-11T12:06:39.739506Z","shell.execute_reply.started":"2024-10-11T12:06:39.731589Z","shell.execute_reply":"2024-10-11T12:06:39.738471Z"},"trusted":true},"execution_count":200,"outputs":[{"execution_count":200,"output_type":"execute_result","data":{"text/plain":"Contract\nMonth-to-month    3875\nTwo year          1695\nOne year          1473\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Payment Method'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:39.924208Z","iopub.execute_input":"2024-10-11T12:06:39.924933Z","iopub.status.idle":"2024-10-11T12:06:39.933412Z","shell.execute_reply.started":"2024-10-11T12:06:39.924885Z","shell.execute_reply":"2024-10-11T12:06:39.932263Z"},"trusted":true},"execution_count":201,"outputs":[{"execution_count":201,"output_type":"execute_result","data":{"text/plain":"Payment Method\nElectronic check             2365\nMailed check                 1612\nBank transfer (automatic)    1544\nCredit card (automatic)      1522\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Churn Reason'] = df['Churn Reason'].fillna('Moved')\n","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:40.115858Z","iopub.execute_input":"2024-10-11T12:06:40.116247Z","iopub.status.idle":"2024-10-11T12:06:40.122772Z","shell.execute_reply.started":"2024-10-11T12:06:40.116211Z","shell.execute_reply":"2024-10-11T12:06:40.121581Z"},"trusted":true},"execution_count":202,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:40.296711Z","iopub.execute_input":"2024-10-11T12:06:40.297561Z","iopub.status.idle":"2024-10-11T12:06:40.323513Z","shell.execute_reply.started":"2024-10-11T12:06:40.297509Z","shell.execute_reply":"2024-10-11T12:06:40.322491Z"},"trusted":true},"execution_count":203,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7043 entries, 0 to 7042\nData columns (total 29 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   City               7043 non-null   object \n 1   Zip Code           7043 non-null   int64  \n 2   Lat Long           7043 non-null   object \n 3   Latitude           7043 non-null   float64\n 4   Longitude          7043 non-null   float64\n 5   Gender             7043 non-null   object \n 6   Senior Citizen     7043 non-null   object \n 7   Partner            7043 non-null   object \n 8   Dependents         7043 non-null   object \n 9   Tenure Months      7043 non-null   int64  \n 10  Phone Service      7043 non-null   object \n 11  Multiple Lines     7043 non-null   object \n 12  Internet Service   7043 non-null   object \n 13  Online Security    7043 non-null   object \n 14  Online Backup      7043 non-null   object \n 15  Device Protection  7043 non-null   object \n 16  Tech Support       7043 non-null   object \n 17  Streaming TV       7043 non-null   object \n 18  Streaming Movies   7043 non-null   object \n 19  Contract           7043 non-null   object \n 20  Paperless Billing  7043 non-null   object \n 21  Payment Method     7043 non-null   object \n 22  Monthly Charges    7043 non-null   float64\n 23  Total Charges      7043 non-null   object \n 24  Churn Label        7043 non-null   object \n 25  Churn Value        7043 non-null   int64  \n 26  Churn Score        7043 non-null   int64  \n 27  CLTV               7043 non-null   int64  \n 28  Churn Reason       7043 non-null   object \ndtypes: float64(3), int64(5), object(21)\nmemory usage: 1.6+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"#df = df.drop(['Lat Long','Latitude','Longitude'],axis = 1)\ndf","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:40.508338Z","iopub.execute_input":"2024-10-11T12:06:40.508697Z","iopub.status.idle":"2024-10-11T12:06:40.540600Z","shell.execute_reply.started":"2024-10-11T12:06:40.508662Z","shell.execute_reply":"2024-10-11T12:06:40.539414Z"},"trusted":true},"execution_count":204,"outputs":[{"execution_count":204,"output_type":"execute_result","data":{"text/plain":"              City  Zip Code                Lat Long   Latitude   Longitude  \\\n0      Los Angeles     90003  33.964131, -118.272783  33.964131 -118.272783   \n1      Los Angeles     90005   34.059281, -118.30742  34.059281 -118.307420   \n2      Los Angeles     90006  34.048013, -118.293953  34.048013 -118.293953   \n3      Los Angeles     90010  34.062125, -118.315709  34.062125 -118.315709   \n4      Los Angeles     90015  34.039224, -118.266293  34.039224 -118.266293   \n...            ...       ...                     ...        ...         ...   \n7038       Landers     92285  34.341737, -116.539416  34.341737 -116.539416   \n7039      Adelanto     92301  34.667815, -117.536183  34.667815 -117.536183   \n7040         Amboy     92304  34.559882, -115.637164  34.559882 -115.637164   \n7041  Angelus Oaks     92305     34.1678, -116.86433  34.167800 -116.864330   \n7042  Apple Valley     92308  34.424926, -117.184503  34.424926 -117.184503   \n\n      Gender Senior Citizen Partner Dependents  Tenure Months  ...  \\\n0       Male             No      No         No              2  ...   \n1     Female             No      No        Yes              2  ...   \n2     Female             No      No        Yes              8  ...   \n3     Female             No     Yes        Yes             28  ...   \n4       Male             No      No        Yes             49  ...   \n...      ...            ...     ...        ...            ...  ...   \n7038  Female             No      No         No             72  ...   \n7039    Male             No     Yes        Yes             24  ...   \n7040  Female             No     Yes        Yes             72  ...   \n7041  Female             No     Yes        Yes             11  ...   \n7042    Male             No      No         No             66  ...   \n\n            Contract Paperless Billing             Payment Method  \\\n0     Month-to-month               Yes               Mailed check   \n1     Month-to-month               Yes           Electronic check   \n2     Month-to-month               Yes           Electronic check   \n3     Month-to-month               Yes           Electronic check   \n4     Month-to-month               Yes  Bank transfer (automatic)   \n...              ...               ...                        ...   \n7038        Two year               Yes  Bank transfer (automatic)   \n7039        One year               Yes               Mailed check   \n7040        One year               Yes    Credit card (automatic)   \n7041  Month-to-month               Yes           Electronic check   \n7042        Two year               Yes  Bank transfer (automatic)   \n\n     Monthly Charges Total Charges Churn Label Churn Value Churn Score  CLTV  \\\n0              53.85        108.15         Yes           1          86  3239   \n1              70.70        151.65         Yes           1          67  2701   \n2              99.65         820.5         Yes           1          86  5372   \n3             104.80       3046.05         Yes           1          84  5003   \n4             103.70        5036.3         Yes           1          89  5340   \n...              ...           ...         ...         ...         ...   ...   \n7038           21.15        1419.4          No           0          45  5306   \n7039           84.80        1990.5          No           0          59  2140   \n7040          103.20        7362.9          No           0          71  5560   \n7041           29.60        346.45          No           0          59  2793   \n7042          105.65        6844.5          No           0          38  5097   \n\n                       Churn Reason  \n0      Competitor made better offer  \n1                             Moved  \n2                             Moved  \n3                             Moved  \n4     Competitor had better devices  \n...                             ...  \n7038                          Moved  \n7039                          Moved  \n7040                          Moved  \n7041                          Moved  \n7042                          Moved  \n\n[7043 rows x 29 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>City</th>\n      <th>Zip Code</th>\n      <th>Lat Long</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Gender</th>\n      <th>Senior Citizen</th>\n      <th>Partner</th>\n      <th>Dependents</th>\n      <th>Tenure Months</th>\n      <th>...</th>\n      <th>Contract</th>\n      <th>Paperless Billing</th>\n      <th>Payment Method</th>\n      <th>Monthly Charges</th>\n      <th>Total Charges</th>\n      <th>Churn Label</th>\n      <th>Churn Value</th>\n      <th>Churn Score</th>\n      <th>CLTV</th>\n      <th>Churn Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Los Angeles</td>\n      <td>90003</td>\n      <td>33.964131, -118.272783</td>\n      <td>33.964131</td>\n      <td>-118.272783</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>2</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>53.85</td>\n      <td>108.15</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>3239</td>\n      <td>Competitor made better offer</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Los Angeles</td>\n      <td>90005</td>\n      <td>34.059281, -118.30742</td>\n      <td>34.059281</td>\n      <td>-118.307420</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>2</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>70.70</td>\n      <td>151.65</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>67</td>\n      <td>2701</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Los Angeles</td>\n      <td>90006</td>\n      <td>34.048013, -118.293953</td>\n      <td>34.048013</td>\n      <td>-118.293953</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>8</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>99.65</td>\n      <td>820.5</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>5372</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Los Angeles</td>\n      <td>90010</td>\n      <td>34.062125, -118.315709</td>\n      <td>34.062125</td>\n      <td>-118.315709</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>28</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>104.80</td>\n      <td>3046.05</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>84</td>\n      <td>5003</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Los Angeles</td>\n      <td>90015</td>\n      <td>34.039224, -118.266293</td>\n      <td>34.039224</td>\n      <td>-118.266293</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>49</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>103.70</td>\n      <td>5036.3</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>89</td>\n      <td>5340</td>\n      <td>Competitor had better devices</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7038</th>\n      <td>Landers</td>\n      <td>92285</td>\n      <td>34.341737, -116.539416</td>\n      <td>34.341737</td>\n      <td>-116.539416</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>72</td>\n      <td>...</td>\n      <td>Two year</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>21.15</td>\n      <td>1419.4</td>\n      <td>No</td>\n      <td>0</td>\n      <td>45</td>\n      <td>5306</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>7039</th>\n      <td>Adelanto</td>\n      <td>92301</td>\n      <td>34.667815, -117.536183</td>\n      <td>34.667815</td>\n      <td>-117.536183</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>24</td>\n      <td>...</td>\n      <td>One year</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>84.80</td>\n      <td>1990.5</td>\n      <td>No</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2140</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>7040</th>\n      <td>Amboy</td>\n      <td>92304</td>\n      <td>34.559882, -115.637164</td>\n      <td>34.559882</td>\n      <td>-115.637164</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>72</td>\n      <td>...</td>\n      <td>One year</td>\n      <td>Yes</td>\n      <td>Credit card (automatic)</td>\n      <td>103.20</td>\n      <td>7362.9</td>\n      <td>No</td>\n      <td>0</td>\n      <td>71</td>\n      <td>5560</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>7041</th>\n      <td>Angelus Oaks</td>\n      <td>92305</td>\n      <td>34.1678, -116.86433</td>\n      <td>34.167800</td>\n      <td>-116.864330</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>11</td>\n      <td>...</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Electronic check</td>\n      <td>29.60</td>\n      <td>346.45</td>\n      <td>No</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2793</td>\n      <td>Moved</td>\n    </tr>\n    <tr>\n      <th>7042</th>\n      <td>Apple Valley</td>\n      <td>92308</td>\n      <td>34.424926, -117.184503</td>\n      <td>34.424926</td>\n      <td>-117.184503</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>66</td>\n      <td>...</td>\n      <td>Two year</td>\n      <td>Yes</td>\n      <td>Bank transfer (automatic)</td>\n      <td>105.65</td>\n      <td>6844.5</td>\n      <td>No</td>\n      <td>0</td>\n      <td>38</td>\n      <td>5097</td>\n      <td>Moved</td>\n    </tr>\n  </tbody>\n</table>\n<p>7043 rows × 29 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df['Senior Citizen'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:40.666468Z","iopub.execute_input":"2024-10-11T12:06:40.667422Z","iopub.status.idle":"2024-10-11T12:06:40.678021Z","shell.execute_reply.started":"2024-10-11T12:06:40.667367Z","shell.execute_reply":"2024-10-11T12:06:40.677021Z"},"trusted":true},"execution_count":205,"outputs":[{"execution_count":205,"output_type":"execute_result","data":{"text/plain":"Senior Citizen\nNo     5901\nYes    1142\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:40.864557Z","iopub.execute_input":"2024-10-11T12:06:40.865464Z","iopub.status.idle":"2024-10-11T12:06:40.888145Z","shell.execute_reply.started":"2024-10-11T12:06:40.865406Z","shell.execute_reply":"2024-10-11T12:06:40.887200Z"},"trusted":true},"execution_count":206,"outputs":[{"execution_count":206,"output_type":"execute_result","data":{"text/plain":"City                 0\nZip Code             0\nLat Long             0\nLatitude             0\nLongitude            0\nGender               0\nSenior Citizen       0\nPartner              0\nDependents           0\nTenure Months        0\nPhone Service        0\nMultiple Lines       0\nInternet Service     0\nOnline Security      0\nOnline Backup        0\nDevice Protection    0\nTech Support         0\nStreaming TV         0\nStreaming Movies     0\nContract             0\nPaperless Billing    0\nPayment Method       0\nMonthly Charges      0\nTotal Charges        0\nChurn Label          0\nChurn Value          0\nChurn Score          0\nCLTV                 0\nChurn Reason         0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:41.036721Z","iopub.execute_input":"2024-10-11T12:06:41.037110Z","iopub.status.idle":"2024-10-11T12:06:41.042000Z","shell.execute_reply.started":"2024-10-11T12:06:41.037073Z","shell.execute_reply":"2024-10-11T12:06:41.040721Z"},"trusted":true},"execution_count":207,"outputs":[]},{"cell_type":"code","source":"City_l = LabelEncoder()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:41.250122Z","iopub.execute_input":"2024-10-11T12:06:41.250723Z","iopub.status.idle":"2024-10-11T12:06:41.255700Z","shell.execute_reply.started":"2024-10-11T12:06:41.250685Z","shell.execute_reply":"2024-10-11T12:06:41.254405Z"},"trusted":true},"execution_count":208,"outputs":[]},{"cell_type":"code","source":"df.City = City_l.fit_transform(df['City'])","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:41.384813Z","iopub.execute_input":"2024-10-11T12:06:41.385709Z","iopub.status.idle":"2024-10-11T12:06:41.394225Z","shell.execute_reply.started":"2024-10-11T12:06:41.385660Z","shell.execute_reply":"2024-10-11T12:06:41.393077Z"},"trusted":true},"execution_count":209,"outputs":[]},{"cell_type":"code","source":"sex_l = LabelEncoder()\ndf.Gender = sex_l.fit_transform(df.Gender)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:41.549155Z","iopub.execute_input":"2024-10-11T12:06:41.549513Z","iopub.status.idle":"2024-10-11T12:06:41.556376Z","shell.execute_reply.started":"2024-10-11T12:06:41.549480Z","shell.execute_reply":"2024-10-11T12:06:41.555250Z"},"trusted":true},"execution_count":210,"outputs":[]},{"cell_type":"code","source":"Senior_l = LabelEncoder()\ndf['Senior Citizen'] = Senior_l.fit_transform(df['Senior Citizen'])","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:41.729307Z","iopub.execute_input":"2024-10-11T12:06:41.730196Z","iopub.status.idle":"2024-10-11T12:06:41.736511Z","shell.execute_reply.started":"2024-10-11T12:06:41.730149Z","shell.execute_reply":"2024-10-11T12:06:41.735438Z"},"trusted":true},"execution_count":211,"outputs":[]},{"cell_type":"code","source":"partner_l = LabelEncoder()\ndf['Partner'] = partner_l.fit_transform(df['Partner'])\nDependents_l = LabelEncoder()\ndf['Dependents'] = Dependents_l.fit_transform(df['Dependents'])\nPhone_Service_l = LabelEncoder()\ndf['Phone Service'] = Phone_Service_l.fit_transform(df['Phone Service'])\nMultiple_Lines_l = LabelEncoder()\ndf['Multiple Lines'] = Multiple_Lines_l.fit_transform(df['Multiple Lines'])\nInternet_Service_l = LabelEncoder()\ndf['Internet Service'] = Internet_Service_l.fit_transform(df['Internet Service'])\n","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:41.884225Z","iopub.execute_input":"2024-10-11T12:06:41.884825Z","iopub.status.idle":"2024-10-11T12:06:41.900187Z","shell.execute_reply.started":"2024-10-11T12:06:41.884789Z","shell.execute_reply":"2024-10-11T12:06:41.899064Z"},"trusted":true},"execution_count":212,"outputs":[]},{"cell_type":"code","source":"df.iloc[:,10:].head(1)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:42.142246Z","iopub.execute_input":"2024-10-11T12:06:42.142840Z","iopub.status.idle":"2024-10-11T12:06:42.160838Z","shell.execute_reply.started":"2024-10-11T12:06:42.142803Z","shell.execute_reply":"2024-10-11T12:06:42.159756Z"},"trusted":true},"execution_count":213,"outputs":[{"execution_count":213,"output_type":"execute_result","data":{"text/plain":"   Phone Service  Multiple Lines  Internet Service Online Security  \\\n0              1               0                 0             Yes   \n\n  Online Backup Device Protection Tech Support Streaming TV Streaming Movies  \\\n0           Yes                No           No           No               No   \n\n         Contract Paperless Billing Payment Method  Monthly Charges  \\\n0  Month-to-month               Yes   Mailed check            53.85   \n\n  Total Charges Churn Label  Churn Value  Churn Score  CLTV  \\\n0        108.15         Yes            1           86  3239   \n\n                   Churn Reason  \n0  Competitor made better offer  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Phone Service</th>\n      <th>Multiple Lines</th>\n      <th>Internet Service</th>\n      <th>Online Security</th>\n      <th>Online Backup</th>\n      <th>Device Protection</th>\n      <th>Tech Support</th>\n      <th>Streaming TV</th>\n      <th>Streaming Movies</th>\n      <th>Contract</th>\n      <th>Paperless Billing</th>\n      <th>Payment Method</th>\n      <th>Monthly Charges</th>\n      <th>Total Charges</th>\n      <th>Churn Label</th>\n      <th>Churn Value</th>\n      <th>Churn Score</th>\n      <th>CLTV</th>\n      <th>Churn Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Month-to-month</td>\n      <td>Yes</td>\n      <td>Mailed check</td>\n      <td>53.85</td>\n      <td>108.15</td>\n      <td>Yes</td>\n      <td>1</td>\n      <td>86</td>\n      <td>3239</td>\n      <td>Competitor made better offer</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"Online_Security_l = LabelEncoder()\ndf['Online Security'] = Online_Security_l.fit_transform(df['Online Security'])\nOnline_Backup_l = LabelEncoder()\ndf['Online Backup'] = Online_Backup_l.fit_transform(df['Online Backup'])\nDevice_Protection_l = LabelEncoder()\ndf['Device Protection'] = Device_Protection_l.fit_transform(df['Device Protection'])\nTech_Support_l = LabelEncoder()\ndf['Tech Support'] = Tech_Support_l.fit_transform(df['Tech Support'])\nStreaming_TV_l = LabelEncoder()\ndf['Streaming TV'] = Streaming_TV_l.fit_transform(df['Streaming TV'])\nStreaming_Movies_l = LabelEncoder()\ndf['Streaming Movies'] = Streaming_Movies_l.fit_transform(df['Streaming Movies'])\nContract_l = LabelEncoder()\ndf['Contract'] = Contract_l.fit_transform(df['Contract'])\nPaperless_Billing_l = LabelEncoder()\ndf['Paperless Billing'] = Paperless_Billing_l.fit_transform(df['Paperless Billing'])\nPayment_Method_l = LabelEncoder()\ndf['Payment Method'] = Payment_Method_l.fit_transform(df['Payment Method'])\nChurn_Label_l = LabelEncoder()\ndf['Churn Label'] = Churn_Label_l.fit_transform(df['Churn Label'])\nChurn_Reason_l = LabelEncoder()\ndf['Churn Reason'] = Churn_Reason_l.fit_transform(df['Churn Reason'])","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:42.187101Z","iopub.execute_input":"2024-10-11T12:06:42.187457Z","iopub.status.idle":"2024-10-11T12:06:42.217894Z","shell.execute_reply.started":"2024-10-11T12:06:42.187421Z","shell.execute_reply":"2024-10-11T12:06:42.216619Z"},"trusted":true},"execution_count":214,"outputs":[]},{"cell_type":"code","source":"#df.info()\n\ndf['Total Charges'] = pd.to_numeric(df['Total Charges'])","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:08:58.928305Z","iopub.execute_input":"2024-10-11T12:08:58.929069Z","iopub.status.idle":"2024-10-11T12:08:58.934306Z","shell.execute_reply.started":"2024-10-11T12:08:58.929023Z","shell.execute_reply":"2024-10-11T12:08:58.933108Z"},"trusted":true},"execution_count":242,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_30/491835200.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df['Total Charges'] = pd.to_numeric(df['Total Charges'])\n","output_type":"stream"}]},{"cell_type":"code","source":"'''def check(s):\n    \n    li =[]\n    num = None\n    for i in s:\n        if i.isnumeric():\n            li.append(i)\n    num.join(li,'')\n    return int(num)\n    '''","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:06:42.431096Z","iopub.execute_input":"2024-10-11T12:06:42.431447Z","iopub.status.idle":"2024-10-11T12:06:42.438381Z","shell.execute_reply.started":"2024-10-11T12:06:42.431412Z","shell.execute_reply":"2024-10-11T12:06:42.437192Z"},"trusted":true},"execution_count":216,"outputs":[{"execution_count":216,"output_type":"execute_result","data":{"text/plain":"\"def check(s):\\n    \\n    li =[]\\n    num = None\\n    for i in s:\\n        if i.isnumeric():\\n            li.append(i)\\n    num.join(li,'')\\n    return int(num)\\n    \""},"metadata":{}}]},{"cell_type":"code","source":"#df = df[df['Total Charges'] != ' ']\n#df = df.drop('Lat Long',axis=1)\n#df = df.drop(['Latitude','Longitude'],axis=1)\ndf\n","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:13:46.445789Z","iopub.execute_input":"2024-10-11T12:13:46.446797Z","iopub.status.idle":"2024-10-11T12:13:46.473764Z","shell.execute_reply.started":"2024-10-11T12:13:46.446747Z","shell.execute_reply":"2024-10-11T12:13:46.472584Z"},"trusted":true},"execution_count":264,"outputs":[{"execution_count":264,"output_type":"execute_result","data":{"text/plain":"      City  Zip Code  Gender  Senior Citizen  Partner  Dependents  \\\n0      562     90003       1               0        0           0   \n1      562     90005       0               0        0           1   \n2      562     90006       0               0        0           1   \n3      562     90010       0               0        1           1   \n4      562     90015       1               0        0           1   \n...    ...       ...     ...             ...      ...         ...   \n7038   521     92285       0               0        0           0   \n7039     2     92301       1               0        1           1   \n7040    22     92304       0               0        1           1   \n7041    26     92305       0               0        1           1   \n7042    32     92308       1               0        0           0   \n\n      Tenure Months  Phone Service  Multiple Lines  Internet Service  ...  \\\n0                 2              1               0                 0  ...   \n1                 2              1               0                 1  ...   \n2                 8              1               2                 1  ...   \n3                28              1               2                 1  ...   \n4                49              1               2                 1  ...   \n...             ...            ...             ...               ...  ...   \n7038             72              1               0                 2  ...   \n7039             24              1               2                 0  ...   \n7040             72              1               2                 1  ...   \n7041             11              0               1                 0  ...   \n7042             66              1               0                 1  ...   \n\n      Contract  Paperless Billing  Payment Method  Monthly Charges  \\\n0            0                  1               3            53.85   \n1            0                  1               2            70.70   \n2            0                  1               2            99.65   \n3            0                  1               2           104.80   \n4            0                  1               0           103.70   \n...        ...                ...             ...              ...   \n7038         2                  1               0            21.15   \n7039         1                  1               3            84.80   \n7040         1                  1               1           103.20   \n7041         0                  1               2            29.60   \n7042         2                  1               0           105.65   \n\n      Total Charges  Churn Label  Churn Value  Churn Score  CLTV  Churn Reason  \n0            108.15            1            1           86  3239             3  \n1            151.65            1            1           67  2701            13  \n2            820.50            1            1           86  5372            13  \n3           3046.05            1            1           84  5003            13  \n4           5036.30            1            1           89  5340             2  \n...             ...          ...          ...          ...   ...           ...  \n7038        1419.40            0            0           45  5306            13  \n7039        1990.50            0            0           59  2140            13  \n7040        7362.90            0            0           71  5560            13  \n7041         346.45            0            0           59  2793            13  \n7042        6844.50            0            0           38  5097            13  \n\n[7032 rows x 26 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>City</th>\n      <th>Zip Code</th>\n      <th>Gender</th>\n      <th>Senior Citizen</th>\n      <th>Partner</th>\n      <th>Dependents</th>\n      <th>Tenure Months</th>\n      <th>Phone Service</th>\n      <th>Multiple Lines</th>\n      <th>Internet Service</th>\n      <th>...</th>\n      <th>Contract</th>\n      <th>Paperless Billing</th>\n      <th>Payment Method</th>\n      <th>Monthly Charges</th>\n      <th>Total Charges</th>\n      <th>Churn Label</th>\n      <th>Churn Value</th>\n      <th>Churn Score</th>\n      <th>CLTV</th>\n      <th>Churn Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>562</td>\n      <td>90003</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3</td>\n      <td>53.85</td>\n      <td>108.15</td>\n      <td>1</td>\n      <td>1</td>\n      <td>86</td>\n      <td>3239</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>562</td>\n      <td>90005</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>70.70</td>\n      <td>151.65</td>\n      <td>1</td>\n      <td>1</td>\n      <td>67</td>\n      <td>2701</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>562</td>\n      <td>90006</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>99.65</td>\n      <td>820.50</td>\n      <td>1</td>\n      <td>1</td>\n      <td>86</td>\n      <td>5372</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>562</td>\n      <td>90010</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>28</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>104.80</td>\n      <td>3046.05</td>\n      <td>1</td>\n      <td>1</td>\n      <td>84</td>\n      <td>5003</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>562</td>\n      <td>90015</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>49</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>103.70</td>\n      <td>5036.30</td>\n      <td>1</td>\n      <td>1</td>\n      <td>89</td>\n      <td>5340</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7038</th>\n      <td>521</td>\n      <td>92285</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>72</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>...</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21.15</td>\n      <td>1419.40</td>\n      <td>0</td>\n      <td>0</td>\n      <td>45</td>\n      <td>5306</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>7039</th>\n      <td>2</td>\n      <td>92301</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>24</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>84.80</td>\n      <td>1990.50</td>\n      <td>0</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2140</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>7040</th>\n      <td>22</td>\n      <td>92304</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>72</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>103.20</td>\n      <td>7362.90</td>\n      <td>0</td>\n      <td>0</td>\n      <td>71</td>\n      <td>5560</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>7041</th>\n      <td>26</td>\n      <td>92305</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>29.60</td>\n      <td>346.45</td>\n      <td>0</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2793</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>7042</th>\n      <td>32</td>\n      <td>92308</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>66</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>105.65</td>\n      <td>6844.50</td>\n      <td>0</td>\n      <td>0</td>\n      <td>38</td>\n      <td>5097</td>\n      <td>13</td>\n    </tr>\n  </tbody>\n</table>\n<p>7032 rows × 26 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"x = df.drop('Churn Value',axis=1)\ny = df['Churn Value']\ndf.shape","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:14:00.679807Z","iopub.execute_input":"2024-10-11T12:14:00.680928Z","iopub.status.idle":"2024-10-11T12:14:00.690950Z","shell.execute_reply.started":"2024-10-11T12:14:00.680869Z","shell.execute_reply":"2024-10-11T12:14:00.689883Z"},"trusted":true},"execution_count":265,"outputs":[{"execution_count":265,"output_type":"execute_result","data":{"text/plain":"(7032, 26)"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,random_state=1,test_size=30)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:14:03.789659Z","iopub.execute_input":"2024-10-11T12:14:03.790129Z","iopub.status.idle":"2024-10-11T12:14:03.800460Z","shell.execute_reply.started":"2024-10-11T12:14:03.790081Z","shell.execute_reply":"2024-10-11T12:14:03.799493Z"},"trusted":true},"execution_count":266,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nstd = StandardScaler()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:14:07.743880Z","iopub.execute_input":"2024-10-11T12:14:07.744918Z","iopub.status.idle":"2024-10-11T12:14:07.749552Z","shell.execute_reply.started":"2024-10-11T12:14:07.744858Z","shell.execute_reply":"2024-10-11T12:14:07.748418Z"},"trusted":true},"execution_count":267,"outputs":[]},{"cell_type":"code","source":"x_train_scaled = std.fit_transform(x_train)\nx_test_scaled = std.fit_transform(x_test)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:14:10.178169Z","iopub.execute_input":"2024-10-11T12:14:10.179031Z","iopub.status.idle":"2024-10-11T12:14:10.196955Z","shell.execute_reply.started":"2024-10-11T12:14:10.178969Z","shell.execute_reply":"2024-10-11T12:14:10.196000Z"},"trusted":true},"execution_count":268,"outputs":[]},{"cell_type":"code","source":"x_train_scaled.shape","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:14:14.186605Z","iopub.execute_input":"2024-10-11T12:14:14.187437Z","iopub.status.idle":"2024-10-11T12:14:14.193991Z","shell.execute_reply.started":"2024-10-11T12:14:14.187397Z","shell.execute_reply":"2024-10-11T12:14:14.192833Z"},"trusted":true},"execution_count":269,"outputs":[{"execution_count":269,"output_type":"execute_result","data":{"text/plain":"(7002, 25)"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense \nfrom tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.optimizers import Adam\nfrom sklearn.metrics import accuracy_score","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:14:17.947768Z","iopub.execute_input":"2024-10-11T12:14:17.948237Z","iopub.status.idle":"2024-10-11T12:14:17.953663Z","shell.execute_reply.started":"2024-10-11T12:14:17.948194Z","shell.execute_reply":"2024-10-11T12:14:17.952666Z"},"trusted":true},"execution_count":270,"outputs":[]},{"cell_type":"code","source":"model = Sequential()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:14:22.264312Z","iopub.execute_input":"2024-10-11T12:14:22.265168Z","iopub.status.idle":"2024-10-11T12:14:22.270802Z","shell.execute_reply.started":"2024-10-11T12:14:22.265116Z","shell.execute_reply":"2024-10-11T12:14:22.269682Z"},"trusted":true},"execution_count":271,"outputs":[]},{"cell_type":"code","source":"model.add(Dense(25,input_dim=25,activation='relu'))\nmodel.add(Dense(25,activation='relu'))\nmodel.add(Dense(25,activation='relu'))\nmodel.add(Dense(25,activation='relu'))\nmodel.add(Dense(1,activation='sigmoid'))","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:20:22.604780Z","iopub.execute_input":"2024-10-11T12:20:22.605505Z","iopub.status.idle":"2024-10-11T12:20:22.671642Z","shell.execute_reply.started":"2024-10-11T12:20:22.605465Z","shell.execute_reply":"2024-10-11T12:20:22.670736Z"},"trusted":true},"execution_count":288,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"}]},{"cell_type":"code","source":"adam = Adam(learning_rate=0.01)\nmodel.compile(loss='ce',optimizer='adam',metrics=['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:20:26.893706Z","iopub.execute_input":"2024-10-11T12:20:26.894458Z","iopub.status.idle":"2024-10-11T12:20:26.905491Z","shell.execute_reply.started":"2024-10-11T12:20:26.894411Z","shell.execute_reply":"2024-10-11T12:20:26.904501Z"},"trusted":true},"execution_count":289,"outputs":[]},{"cell_type":"code","source":"model.summary()","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:20:30.862338Z","iopub.execute_input":"2024-10-11T12:20:30.862775Z","iopub.status.idle":"2024-10-11T12:20:30.893065Z","shell.execute_reply.started":"2024-10-11T12:20:30.862736Z","shell.execute_reply":"2024-10-11T12:20:30.892208Z"},"trusted":true},"execution_count":290,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_2\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_2\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense_12 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m25\u001b[0m)             │           \u001b[38;5;34m650\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_13 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m50\u001b[0m)             │         \u001b[38;5;34m1,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_14 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m51\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_15 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m25\u001b[0m)             │            \u001b[38;5;34m50\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_16 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m25\u001b[0m)             │           \u001b[38;5;34m650\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_17 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m25\u001b[0m)             │           \u001b[38;5;34m650\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_18 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m26\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_19 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m25\u001b[0m)             │            \u001b[38;5;34m50\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_20 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m25\u001b[0m)             │           \u001b[38;5;34m650\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_21 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m25\u001b[0m)             │           \u001b[38;5;34m650\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_22 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m25\u001b[0m)             │           \u001b[38;5;34m650\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_23 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m26\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense_12 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">650</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_13 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_14 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">51</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_15 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)             │            <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_16 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">650</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_17 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">650</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_18 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_19 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)             │            <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_20 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">650</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_21 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">650</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_22 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">650</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_23 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m5,403\u001b[0m (21.11 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">5,403</span> (21.11 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m5,403\u001b[0m (21.11 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">5,403</span> (21.11 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"history = model.fit(x_train_scaled,y_train,epochs = 100,batch_size=7000,validation_data=(x_test_scaled,y_test),verbose=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:21:08.550355Z","iopub.execute_input":"2024-10-11T12:21:08.551147Z","iopub.status.idle":"2024-10-11T12:21:17.949560Z","shell.execute_reply.started":"2024-10-11T12:21:08.551102Z","shell.execute_reply":"2024-10-11T12:21:17.948449Z"},"trusted":true},"execution_count":291,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 224ms/step - accuracy: 0.7345 - loss: 0.6949 - val_accuracy: 0.6667 - val_loss: 0.6914\nEpoch 2/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 0.7345 - loss: 0.6910 - val_accuracy: 1.0000 - val_loss: 0.6867\nEpoch 3/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.6865 - val_accuracy: 1.0000 - val_loss: 0.6820\nEpoch 4/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - accuracy: 1.0000 - loss: 0.6818 - val_accuracy: 1.0000 - val_loss: 0.6771\nEpoch 5/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 30ms/step - accuracy: 1.0000 - loss: 0.6767 - val_accuracy: 1.0000 - val_loss: 0.6722\nEpoch 6/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.6716 - val_accuracy: 1.0000 - val_loss: 0.6675\nEpoch 7/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.6665 - val_accuracy: 1.0000 - val_loss: 0.6622\nEpoch 8/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.6608 - val_accuracy: 1.0000 - val_loss: 0.6566\nEpoch 9/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.6548 - val_accuracy: 1.0000 - val_loss: 0.6504\nEpoch 10/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.6483 - val_accuracy: 1.0000 - val_loss: 0.6443\nEpoch 11/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.6418 - val_accuracy: 1.0000 - val_loss: 0.6378\nEpoch 12/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.6350 - val_accuracy: 1.0000 - val_loss: 0.6310\nEpoch 13/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.6280 - val_accuracy: 1.0000 - val_loss: 0.6239\nEpoch 14/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - accuracy: 1.0000 - loss: 0.6208 - val_accuracy: 1.0000 - val_loss: 0.6166\nEpoch 15/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.6132 - val_accuracy: 1.0000 - val_loss: 0.6089\nEpoch 16/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.6051 - val_accuracy: 1.0000 - val_loss: 0.6006\nEpoch 17/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.5964 - val_accuracy: 1.0000 - val_loss: 0.5918\nEpoch 18/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.5872 - val_accuracy: 1.0000 - val_loss: 0.5827\nEpoch 19/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - accuracy: 1.0000 - loss: 0.5778 - val_accuracy: 1.0000 - val_loss: 0.5733\nEpoch 20/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.5681 - val_accuracy: 1.0000 - val_loss: 0.5637\nEpoch 21/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.5582 - val_accuracy: 1.0000 - val_loss: 0.5536\nEpoch 22/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - accuracy: 1.0000 - loss: 0.5476 - val_accuracy: 1.0000 - val_loss: 0.5430\nEpoch 23/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.5366 - val_accuracy: 1.0000 - val_loss: 0.5320\nEpoch 24/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.5252 - val_accuracy: 1.0000 - val_loss: 0.5206\nEpoch 25/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 46ms/step - accuracy: 1.0000 - loss: 0.5134 - val_accuracy: 1.0000 - val_loss: 0.5085\nEpoch 26/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.5009 - val_accuracy: 1.0000 - val_loss: 0.4958\nEpoch 27/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.4880 - val_accuracy: 1.0000 - val_loss: 0.4834\nEpoch 28/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.4752 - val_accuracy: 1.0000 - val_loss: 0.4701\nEpoch 29/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.4617 - val_accuracy: 1.0000 - val_loss: 0.4570\nEpoch 30/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.4483 - val_accuracy: 1.0000 - val_loss: 0.4430\nEpoch 31/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.4341 - val_accuracy: 1.0000 - val_loss: 0.4289\nEpoch 32/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.4197 - val_accuracy: 1.0000 - val_loss: 0.4152\nEpoch 33/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.4055 - val_accuracy: 1.0000 - val_loss: 0.4000\nEpoch 34/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - accuracy: 1.0000 - loss: 0.3901 - val_accuracy: 1.0000 - val_loss: 0.3856\nEpoch 35/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.3757 - val_accuracy: 1.0000 - val_loss: 0.3703\nEpoch 36/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.3601 - val_accuracy: 1.0000 - val_loss: 0.3558\nEpoch 37/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.3450 - val_accuracy: 1.0000 - val_loss: 0.3426\nEpoch 38/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - accuracy: 1.0000 - loss: 0.3309 - val_accuracy: 1.0000 - val_loss: 0.3253\nEpoch 39/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.3141 - val_accuracy: 1.0000 - val_loss: 0.3104\nEpoch 40/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 31ms/step - accuracy: 1.0000 - loss: 0.2994 - val_accuracy: 1.0000 - val_loss: 0.2962\nEpoch 41/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.2847 - val_accuracy: 1.0000 - val_loss: 0.2825\nEpoch 42/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.2705 - val_accuracy: 1.0000 - val_loss: 0.2696\nEpoch 43/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.2569 - val_accuracy: 1.0000 - val_loss: 0.2562\nEpoch 44/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.2431 - val_accuracy: 1.0000 - val_loss: 0.2420\nEpoch 45/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.2288 - val_accuracy: 1.0000 - val_loss: 0.2282\nEpoch 46/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.2150 - val_accuracy: 1.0000 - val_loss: 0.2148\nEpoch 47/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.2018 - val_accuracy: 1.0000 - val_loss: 0.2024\nEpoch 48/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.1898 - val_accuracy: 1.0000 - val_loss: 0.1903\nEpoch 49/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.1779 - val_accuracy: 1.0000 - val_loss: 0.1783\nEpoch 50/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.1662 - val_accuracy: 1.0000 - val_loss: 0.1666\nEpoch 51/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.1549 - val_accuracy: 1.0000 - val_loss: 0.1556\nEpoch 52/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.1444 - val_accuracy: 1.0000 - val_loss: 0.1459\nEpoch 53/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.1348 - val_accuracy: 1.0000 - val_loss: 0.1356\nEpoch 54/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.1252 - val_accuracy: 1.0000 - val_loss: 0.1267\nEpoch 55/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 1.0000 - loss: 0.1168 - val_accuracy: 1.0000 - val_loss: 0.1184\nEpoch 56/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.1088 - val_accuracy: 1.0000 - val_loss: 0.1109\nEpoch 57/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 1.0000 - loss: 0.1015 - val_accuracy: 1.0000 - val_loss: 0.1042\nEpoch 58/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 1.0000 - loss: 0.0950 - val_accuracy: 1.0000 - val_loss: 0.0981\nEpoch 59/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0891 - val_accuracy: 1.0000 - val_loss: 0.0922\nEpoch 60/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0834 - val_accuracy: 1.0000 - val_loss: 0.0859\nEpoch 61/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0776 - val_accuracy: 1.0000 - val_loss: 0.0802\nEpoch 62/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0725 - val_accuracy: 1.0000 - val_loss: 0.0750\nEpoch 63/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0677 - val_accuracy: 1.0000 - val_loss: 0.0698\nEpoch 64/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0630 - val_accuracy: 1.0000 - val_loss: 0.0648\nEpoch 65/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - accuracy: 1.0000 - loss: 0.0585 - val_accuracy: 1.0000 - val_loss: 0.0599\nEpoch 66/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0542 - val_accuracy: 1.0000 - val_loss: 0.0553\nEpoch 67/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0502 - val_accuracy: 1.0000 - val_loss: 0.0513\nEpoch 68/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0465 - val_accuracy: 1.0000 - val_loss: 0.0478\nEpoch 69/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0434 - val_accuracy: 1.0000 - val_loss: 0.0444\nEpoch 70/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0403 - val_accuracy: 1.0000 - val_loss: 0.0413\nEpoch 71/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 1.0000 - loss: 0.0376 - val_accuracy: 1.0000 - val_loss: 0.0385\nEpoch 72/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0352 - val_accuracy: 1.0000 - val_loss: 0.0359\nEpoch 73/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0328 - val_accuracy: 1.0000 - val_loss: 0.0334\nEpoch 74/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0306 - val_accuracy: 1.0000 - val_loss: 0.0312\nEpoch 75/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0287 - val_accuracy: 1.0000 - val_loss: 0.0291\nEpoch 76/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0268 - val_accuracy: 1.0000 - val_loss: 0.0272\nEpoch 77/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0251 - val_accuracy: 1.0000 - val_loss: 0.0255\nEpoch 78/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0236 - val_accuracy: 1.0000 - val_loss: 0.0240\nEpoch 79/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0223 - val_accuracy: 1.0000 - val_loss: 0.0227\nEpoch 80/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0210 - val_accuracy: 1.0000 - val_loss: 0.0214\nEpoch 81/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0199 - val_accuracy: 1.0000 - val_loss: 0.0203\nEpoch 82/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0189 - val_accuracy: 1.0000 - val_loss: 0.0193\nEpoch 83/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0179 - val_accuracy: 1.0000 - val_loss: 0.0184\nEpoch 84/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0170 - val_accuracy: 1.0000 - val_loss: 0.0175\nEpoch 85/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0162 - val_accuracy: 1.0000 - val_loss: 0.0166\nEpoch 86/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0155 - val_accuracy: 1.0000 - val_loss: 0.0159\nEpoch 87/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 1.0000 - loss: 0.0148 - val_accuracy: 1.0000 - val_loss: 0.0152\nEpoch 88/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0141 - val_accuracy: 1.0000 - val_loss: 0.0146\nEpoch 89/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 1.0000 - loss: 0.0136 - val_accuracy: 1.0000 - val_loss: 0.0140\nEpoch 90/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0130 - val_accuracy: 1.0000 - val_loss: 0.0135\nEpoch 91/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0125 - val_accuracy: 1.0000 - val_loss: 0.0130\nEpoch 92/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0120 - val_accuracy: 1.0000 - val_loss: 0.0125\nEpoch 93/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0116 - val_accuracy: 1.0000 - val_loss: 0.0120\nEpoch 94/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0111 - val_accuracy: 1.0000 - val_loss: 0.0116\nEpoch 95/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0107 - val_accuracy: 1.0000 - val_loss: 0.0112\nEpoch 96/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step - accuracy: 1.0000 - loss: 0.0103 - val_accuracy: 1.0000 - val_loss: 0.0107\nEpoch 97/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - accuracy: 1.0000 - loss: 0.0100 - val_accuracy: 1.0000 - val_loss: 0.0103\nEpoch 98/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0096 - val_accuracy: 1.0000 - val_loss: 0.0100\nEpoch 99/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0092 - val_accuracy: 1.0000 - val_loss: 0.0097\nEpoch 100/100\n\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 1.0000 - loss: 0.0090 - val_accuracy: 1.0000 - val_loss: 0.0094\n","output_type":"stream"}]},{"cell_type":"code","source":"model.get_weights()\ny_pred = model.predict(x_test_scaled)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:18:17.005477Z","iopub.execute_input":"2024-10-11T12:18:17.005932Z","iopub.status.idle":"2024-10-11T12:18:17.133341Z","shell.execute_reply.started":"2024-10-11T12:18:17.005888Z","shell.execute_reply":"2024-10-11T12:18:17.132557Z"},"trusted":true},"execution_count":283,"outputs":[{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 71ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"y_pred_val = np.where(y_pred>0.5,1,0)\ny_pred_val","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:26:10.802183Z","iopub.execute_input":"2024-10-11T12:26:10.802616Z","iopub.status.idle":"2024-10-11T12:26:10.809999Z","shell.execute_reply.started":"2024-10-11T12:26:10.802576Z","shell.execute_reply":"2024-10-11T12:26:10.809054Z"},"trusted":true},"execution_count":295,"outputs":[{"execution_count":295,"output_type":"execute_result","data":{"text/plain":"array([[1],\n       [0],\n       [1],\n       [1],\n       [1],\n       [0],\n       [0],\n       [0],\n       [0],\n       [1],\n       [0],\n       [0],\n       [1],\n       [0],\n       [1],\n       [0],\n       [0],\n       [0],\n       [0],\n       [1],\n       [0],\n       [0],\n       [0],\n       [0],\n       [1],\n       [0],\n       [1],\n       [0],\n       [0],\n       [0]])"},"metadata":{}}]},{"cell_type":"code","source":"accuracy_score(y_test,y_pred_val)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:26:20.942662Z","iopub.execute_input":"2024-10-11T12:26:20.943120Z","iopub.status.idle":"2024-10-11T12:26:20.951684Z","shell.execute_reply.started":"2024-10-11T12:26:20.943070Z","shell.execute_reply":"2024-10-11T12:26:20.950510Z"},"trusted":true},"execution_count":296,"outputs":[{"execution_count":296,"output_type":"execute_result","data":{"text/plain":"1.0"},"metadata":{}}]},{"cell_type":"code","source":"loss = history.history['loss']\naccuracy = history.history['accuracy']\nval_loss = history.history['val_loss']\nval_accuracy = history.history['val_accuracy']","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:26:25.711645Z","iopub.execute_input":"2024-10-11T12:26:25.712685Z","iopub.status.idle":"2024-10-11T12:26:25.717840Z","shell.execute_reply.started":"2024-10-11T12:26:25.712633Z","shell.execute_reply":"2024-10-11T12:26:25.716732Z"},"trusted":true},"execution_count":297,"outputs":[]},{"cell_type":"code","source":"plt.plot(loss)\nplt.plot(val_loss)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:26:28.192458Z","iopub.execute_input":"2024-10-11T12:26:28.192898Z","iopub.status.idle":"2024-10-11T12:26:28.377420Z","shell.execute_reply.started":"2024-10-11T12:26:28.192855Z","shell.execute_reply":"2024-10-11T12:26:28.376435Z"},"trusted":true},"execution_count":298,"outputs":[{"execution_count":298,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7f7c55f31e70>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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F26//XYefPBBUlNTAc11danMvMbGxpKVlVXh9bKyMg4dOnTSc98gy4jL5aJHjx6kpaWVr/P7/aSlpZGYmGhhsrrPNE3uvfdePv74Y7755hvatm1b4fUePXrgdDorzP3mzZvZvXu35j4AF110EWvXrmXVqlXlS8+ePbn11lvL/1nzXHX69u37m0vUt2zZQps2bQBo27YtsbGxFeY7Ly+Pn3/+WfMdoMLCQmy2ij9Ndrsdv98PaK6rS2XmNTExkZycHJYvX14+5ptvvsHv95OQkHByAU7q9Nc6bMaMGabb7TanTp1qbtiwwfzLX/5iRkVFmR6Px+poddrQoUPNyMhIc+HCheb+/fvLl8LCwvIx99xzj9m6dWvzm2++MZctW2YmJiaaiYmJFqauH/77ahrT1DxXpSVLlpgOh8N86qmnzK1bt5rvvvuuGRISYk6fPr18zNixY82oqCjzk08+MdesWWNeffXVutz0BNxxxx1my5Ytyy/tnT17thkdHW0+9NBD5WM01ycmPz/fXLlypbly5UoTMF944QVz5cqV5q5du0zTrNy8XnrppeZZZ51l/vzzz+aiRYvM9u3b69Lek/XKK6+YrVu3Nl0ul9m7d29z8eLFVkeq84BjLm+99Vb5mKKiIvNvf/ub2ahRIzMkJMS89tprzf3791sXup743zKiea5an332mdm5c2fT7Xabp512mvnGG29UeN3v95ujRo0yY2JiTLfbbV500UXm5s2bLUpbd+Xl5ZnDhw83W7dubQYFBZnt2rUzR44caZaUlJSP0VyfmG+//faYfz/fcccdpmlWbl4PHjxo3nzzzWZYWJgZERFhDh482MzPzz/pbIZp/tdt7URERERqWIM8Z0RERERqD5URERERsZTKiIiIiFhKZUREREQspTIiIiIillIZEREREUupjIiIiIilVEZERETEUiojIiIiYimVEREREbGUyoiIiIhYSmVERERELPX/UwF7KTW+WsgAAAAASUVORK5CYII="},"metadata":{}}]},{"cell_type":"code","source":"import seaborn as sns\nsns.lineplot(loss)\nsns.lineplot(val_loss)\nplt.show()\n\n","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:26:35.758264Z","iopub.execute_input":"2024-10-11T12:26:35.758847Z","iopub.status.idle":"2024-10-11T12:26:36.001583Z","shell.execute_reply.started":"2024-10-11T12:26:35.758790Z","shell.execute_reply":"2024-10-11T12:26:36.000384Z"},"trusted":true},"execution_count":299,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"\nx_test.to_csv('x_test.csv',index=False)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:31:57.280539Z","iopub.execute_input":"2024-10-11T12:31:57.281394Z","iopub.status.idle":"2024-10-11T12:31:57.291997Z","shell.execute_reply.started":"2024-10-11T12:31:57.281345Z","shell.execute_reply":"2024-10-11T12:31:57.291023Z"},"trusted":true},"execution_count":302,"outputs":[]},{"cell_type":"code","source":"x_train.to_csv('x_train.csv',index=False)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:32:31.888456Z","iopub.execute_input":"2024-10-11T12:32:31.888907Z","iopub.status.idle":"2024-10-11T12:32:31.945896Z","shell.execute_reply.started":"2024-10-11T12:32:31.888864Z","shell.execute_reply":"2024-10-11T12:32:31.944998Z"},"trusted":true},"execution_count":303,"outputs":[]},{"cell_type":"code","source":"y_train.to_csv('y_train.csv',index=False)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:33:09.260203Z","iopub.execute_input":"2024-10-11T12:33:09.260654Z","iopub.status.idle":"2024-10-11T12:33:09.273729Z","shell.execute_reply.started":"2024-10-11T12:33:09.260614Z","shell.execute_reply":"2024-10-11T12:33:09.272572Z"},"trusted":true},"execution_count":304,"outputs":[]},{"cell_type":"code","source":"y_test.to_csv('y_test.csv',index=False)","metadata":{"execution":{"iopub.status.busy":"2024-10-11T12:33:36.568960Z","iopub.execute_input":"2024-10-11T12:33:36.569412Z","iopub.status.idle":"2024-10-11T12:33:36.576532Z","shell.execute_reply.started":"2024-10-11T12:33:36.569373Z","shell.execute_reply":"2024-10-11T12:33:36.575497Z"},"trusted":true},"execution_count":305,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}